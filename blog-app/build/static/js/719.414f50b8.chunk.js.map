{"version":3,"file":"static/js/719.414f50b8.chunk.js","mappings":"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","sources":["components/AdminTags.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport api from '../api';\nimport { Box, Button, TextField, Paper, Typography, CircularProgress, Snackbar, Alert, Stack, IconButton, Dialog, DialogTitle, DialogContent, DialogActions, Slide } from '@mui/material';\nimport { DataGrid } from '@mui/x-data-grid';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport AddIcon from '@mui/icons-material/Add';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst AdminTags = () => {\n  const [tags, setTags] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [editing, setEditing] = useState(null);\n  const [form, setForm] = useState({ name: '' });\n  const [snackbar, setSnackbar] = useState({ open: false, message: '', severity: 'success' });\n  const [formDialogOpen, setFormDialogOpen] = useState(false);\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [deleteId, setDeleteId] = useState(null);\n\n  const fetchTags = async () => {\n    setLoading(true);\n    try {\n      const res = await api.get('/tags');\n      setTags(res.data);\n    } catch (err) {\n      setError('Failed to fetch tags');\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => { fetchTags(); }, []);\n\n  const handleDelete = async () => {\n    if (!deleteId) return;\n    try {\n      await api.delete(`/tags/${deleteId}`, { headers: { Authorization: `Bearer ${localStorage.getItem('adminToken')}` } });\n      setSnackbar({ open: true, message: 'Tag deleted', severity: 'success' });\n      fetchTags();\n    } catch {\n      setSnackbar({ open: true, message: 'Delete failed', severity: 'error' });\n    }\n    setDeleteDialogOpen(false);\n    setDeleteId(null);\n  };\n\n  const openDeleteDialog = (id) => {\n    setDeleteId(id);\n    setDeleteDialogOpen(true);\n  };\n\n  const handleAddTag = () => {\n    setEditing(null);\n    setForm({ name: '' });\n    setFormDialogOpen(true);\n  };\n\n  const handleEdit = (tag) => {\n    setEditing(tag._id);\n    setForm({ name: tag.name });\n    setFormDialogOpen(true);\n  };\n\n  const handleFormChange = e => {\n    setForm({ ...form, [e.target.name]: e.target.value });\n  };\n\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n    const headers = { Authorization: `Bearer ${localStorage.getItem('adminToken')}` };\n    try {\n      if (editing) {\n        await api.put(`/tags/${editing}`, form, { headers });\n        setSnackbar({ open: true, message: 'Tag updated', severity: 'success' });\n      } else {\n        await api.post('/tags', form, { headers });\n        setSnackbar({ open: true, message: 'Tag created', severity: 'success' });\n      }\n      setEditing(null);\n      setForm({ name: '' });\n      setFormDialogOpen(false);\n      fetchTags();\n    } catch {\n      setSnackbar({ open: true, message: 'Save failed', severity: 'error' });\n    }\n  };\n\n  const handleCloseDialog = () => {\n    setFormDialogOpen(false);\n    setEditing(null);\n    setForm({ name: '' });\n  };\n\n  const columns = [\n    { field: 'name', headerName: 'Name', flex: 1 },\n    {\n      field: 'actions',\n      headerName: 'Actions',\n      flex: 1,\n      minWidth: 160,\n      sortable: false,\n      renderCell: (params) => (\n        <>\n          <Button\n            variant=\"outlined\"\n            size=\"small\"\n            onClick={() => handleEdit(params.row)}\n            sx={{ mr: 1, display: { xs: 'none', sm: 'inline-flex' } }}\n          >\n            Edit\n          </Button>\n          <Button\n            variant=\"outlined\"\n            color=\"error\"\n            size=\"small\"\n            onClick={() => openDeleteDialog(params.row._id)}\n            sx={{ display: { xs: 'none', sm: 'inline-flex' } }}\n          >\n            Delete\n          </Button>\n          <IconButton size=\"small\" onClick={() => handleEdit(params.row)} sx={{ display: { xs: 'inline-flex', sm: 'none' } }}><EditIcon /></IconButton>\n          <IconButton size=\"small\" color=\"error\" onClick={() => openDeleteDialog(params.row._id)} sx={{ display: { xs: 'inline-flex', sm: 'none' } }}><DeleteIcon /></IconButton>\n        </>\n      )\n    }\n  ];\n\n  return (\n    <Box>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n        <Typography variant=\"h5\" sx={{ fontSize: { xs: '1.4rem', sm: '2rem' }, fontWeight: 700 }}>\n          Manage Tags\n        </Typography>\n        <Button\n          variant=\"contained\"\n          startIcon={<AddIcon />}\n          onClick={handleAddTag}\n          sx={{ display: { xs: 'none', sm: 'flex' } }}\n        >\n          Add Tag\n        </Button>\n        <IconButton\n          color=\"primary\"\n          onClick={handleAddTag}\n          sx={{ display: { xs: 'flex', sm: 'none' } }}\n        >\n          <AddIcon />\n        </IconButton>\n      </Box>\n\n      {loading ? <CircularProgress /> : error ? <Alert severity=\"error\">{error}</Alert> : (\n        <Box sx={{ width: '100%', maxWidth: '100vw', overflowX: 'auto' }}>\n          <DataGrid\n            autoHeight\n            rows={tags.map(t => ({ ...t, id: t._id }))}\n            columns={columns}\n            pageSize={10}\n            rowsPerPageOptions={[5, 10, 20, 100]}\n            sx={{ minWidth: 320, maxWidth: '100vw', bgcolor: 'background.paper', color: 'text.primary', borderRadius: 2 }}\n            disableSelectionOnClick\n          />\n        </Box>\n      )}\n\n      {/* Tag Form Dialog */}\n      <Dialog \n        open={formDialogOpen} \n        onClose={handleCloseDialog}\n        maxWidth=\"sm\"\n        fullWidth\n        TransitionComponent={Transition}\n      >\n        <DialogTitle>\n          {editing ? 'Edit Tag' : 'Add New Tag'}\n        </DialogTitle>\n        <DialogContent dividers>\n          <form onSubmit={handleFormSubmit} style={{ width: '100%' }}>\n            <TextField \n              name=\"name\" \n              label=\"Tag name\" \n              value={form.name} \n              onChange={handleFormChange} \n              required \n              size=\"small\" \n              variant=\"outlined\" \n              fullWidth \n              sx={{ mt: 1 }}\n            />\n          </form>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDialog}>Cancel</Button>\n          <Button \n            onClick={handleFormSubmit} \n            variant=\"contained\"\n            disabled={!form.name}\n          >\n            {editing ? 'Update' : 'Create'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Delete Confirmation Dialog */}\n      <Dialog\n        open={deleteDialogOpen}\n        onClose={() => setDeleteDialogOpen(false)}\n        TransitionComponent={Transition}\n      >\n        <DialogTitle>Confirm Delete</DialogTitle>\n        <DialogContent dividers>\n          Are you sure you want to delete this tag?\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setDeleteDialogOpen(false)}>Cancel</Button>\n          <Button onClick={handleDelete} color=\"error\" variant=\"contained\">Delete</Button>\n        </DialogActions>\n      </Dialog>\n\n      <Snackbar open={snackbar.open} autoHideDuration={3000} onClose={() => setSnackbar({ ...snackbar, open: false })}>\n        <Alert onClose={() => setSnackbar({ ...snackbar, open: false })} severity={snackbar.severity} sx={{ width: '100%' }}>\n          {snackbar.message}\n        </Alert>\n      </Snackbar>\n    </Box>\n  );\n};\n\nexport default AdminTags;\n"],"names":["Transition","React","props","ref","_jsx","Slide","direction","AdminTags","tags","setTags","useState","loading","setLoading","error","setError","editing","setEditing","form","setForm","name","snackbar","setSnackbar","open","message","severity","formDialogOpen","setFormDialogOpen","deleteDialogOpen","setDeleteDialogOpen","deleteId","setDeleteId","fetchTags","async","res","api","get","data","err","useEffect","openDeleteDialog","id","handleAddTag","handleEdit","tag","_id","handleFormSubmit","e","preventDefault","headers","Authorization","localStorage","getItem","put","post","handleCloseDialog","columns","field","headerName","flex","minWidth","sortable","renderCell","params","_jsxs","_Fragment","children","Button","variant","size","onClick","row","sx","mr","display","xs","sm","color","IconButton","EditIcon","DeleteIcon","Box","justifyContent","alignItems","mb","Typography","fontSize","fontWeight","startIcon","AddIcon","CircularProgress","Alert","width","maxWidth","overflowX","DataGrid","autoHeight","rows","map","t","pageSize","rowsPerPageOptions","bgcolor","borderRadius","disableSelectionOnClick","Dialog","onClose","fullWidth","TransitionComponent","DialogTitle","DialogContent","dividers","onSubmit","style","TextField","label","value","onChange","target","required","mt","DialogActions","disabled","delete","Snackbar","autoHideDuration"],"sourceRoot":""}